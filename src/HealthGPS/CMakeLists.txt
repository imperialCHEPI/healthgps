find_package(fmt CONFIG REQUIRED)
find_package(crossguid CONFIG REQUIRED)

add_library(HealthGPS STATIC "")
target_compile_features(HealthGPS PUBLIC cxx_std_${CMAKE_CXX_STANDARD})

target_sources(HealthGPS
	PRIVATE
		"analysis_module.cpp"
		"analysis_module.h"
		"baseline_scenario.cpp"
		"baseline_scenario.h"
		"converter.cpp"
		"converter.h"
		"data_series.cpp"
		"data_series.h"
		"default_cancer_model.cpp"
		"default_cancer_model.h"
		"default_disease_model.cpp"
		"default_disease_model.h"
		"demographic.cpp"
		"demographic.h"
		"disease.cpp"
		"disease.h"
		"disease_table.cpp"
		"disease_table.h"
		"energy_balance_model.cpp"
		"energy_balance_model.h"
		"energy_balance_model_new.cpp"
		"energy_balance_model_new.h"
		"error_message.cpp"
		"error_message.h"
		"event_bus.cpp"
		"event_bus.h"
		"event_subscriber.cpp"
		"fiscal_scenario.cpp"
		"fiscal_scenario.h"
		"food_labelling_scenario.cpp"
		"food_labelling_scenario.h"
		"healthgps.cpp"
		"healthgps.h"
		"hierarchical_model_static.cpp"
		"hierarchical_model_static.h"
		"info_message.cpp"
		"info_message.h"
		"life_table.cpp"
		"life_table.h"
		"lms_model.cpp"
		"lms_model.h"
		"lms_definition.h"
		"mapping.cpp"
		"mapping.h"
		"marketing_dynamic_scenario.cpp"
		"marketing_dynamic_scenario.h"
		"marketing_scenario.cpp"
		"marketing_scenario.h"
		"model_result.cpp"
		"model_result.h"
		"modelinput.cpp"
		"modelinput.h"
		"modelrunner.cpp"
		"modelrunner.h"
		"modulefactory.cpp"
		"modulefactory.h"
		"mtrandom.cpp"
		"mtrandom.h"
		"person.cpp"
		"person.h"
		"population.cpp"
		"population.h"
		"physical_activity_scenario.cpp"
		"physical_activity_scenario.h"
		"random_algorithm.cpp"
		"random_algorithm.h"
		"relative_risk.cpp"
		"relative_risk.h"
		"repository.cpp"
		"repository.h"
		"result_message.cpp"
		"result_message.h"
		"riskfactor.cpp"
		"riskfactor.h"
		"riskfactor_adjustment.cpp"
		"riskfactor_adjustment.h"
		"riskfactor_adjustment_types.h"
		"runner_message.cpp"
		"runner_message.h"
		"runtime_context.cpp"
		"runtime_context.h"
		"runtime_metric.cpp"
		"runtime_metric.h"
		"ses_noise_module.cpp"
		"ses_noise_module.h"
		"settings.cpp"
		"settings.h"
		"simple_policy_scenario.cpp"
		"simple_policy_scenario.h"
		"simulation_definition.cpp"
		"simulation_definition.h"
		"simulation_module.cpp"
		"simulation_module.h"
		"univariate_visitor.cpp"
		"univariate_visitor.h"
		"analysis_definition.h"
		"api.h"
		"baseline_sync_message.h"
		"channel.h"
		"disease_definition.h"
		"disease_registry.h"
		"event_aggregator.h"
		"event_message.h"
		"event_subscriber.h"
		"event_visitor.h"
		"finally.h"
		"gender_table.h"
		"gender_value.h"
		"hierarchical_model.h"
		"hierarchical_model_registry.h"
		"hierarchical_model_types.h"
		"interfaces.h"
		"intervention_scenario.h"
		"map2d.h"
		"monotonic_vector.h"
		"randombit_generator.h"
		"scenario.h"
		"simulation.h"
		"sync_message.h"
		"threadsafe_queue.h"
		"two_step_value.h"
		"weight_category.h"
		"weight_model.cpp"
		"weight_model.h")

target_link_libraries(HealthGPS
	PRIVATE
		HealthGPS.Core
		fmt::fmt
		crossguid)

set(ROOT_NAMESPACE hgps)
