name: Linux

on:
  push:
    branches: [ main ]
  release:
    types: [published]
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Run CMake Linux Workflow

    env:
      VCPKG_ROOT: 'vcpkg'
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
      DEBUG_PRESET: 'linux-debug'
      DEBUG_BUILD_PRESET: 'debug-build-linux'
      DEBUG_TEST_PRESET: 'core-test-linux'
      RELEASE_PRESET: 'linux-release'
      RELEASE_BUILD_PRESET: 'release-build-linux'

    steps:
    - uses: actions/checkout@v3

    - name: Set up GCC
      id: install_gcc
      run: sudo apt install build-essential

    - name: Install TBB library
      id: install_tbb
      run: echo "sudo apt install libtbb-dev"

    - name: Install Ninja
      id: install_ninja
      run: sudo apt install ninja-build

    - name: Install VCPKG
      id: install_vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        git checkout --force 2023.01.09
        ./bootstrap-vcpkg.sh -disableMetrics

    - name: Tool Check
      id: toos_version
      run: |
        ls -l
        cmake --version
        ninja --version
        g++ --version
        ./vcpkg/vcpkg --version

    - name: Configure debug HealthGPS
      id: cmake_config_debug
      working-directory: ${{github.workspace}}
      run: cmake --preset=${{env.DEBUG_PRESET}} -DBUILD_BENCHMARKS=ON

    - name: Build debug HealthGPS
      id: cmake_build_debug
      working-directory: ${{github.workspace}}
      run: cmake --build --preset=${{env.DEBUG_BUILD_PRESET}}

    - name: Test debug HealthGPS
      id: ctest_run
      working-directory: ${{github.workspace}}
      run: ctest --preset=${{env.DEBUG_TEST_PRESET}}

    - name: Configure release HealthGPS
      id: cmake_config_release
      working-directory: ${{github.workspace}}
      run: cmake --preset=${{env.RELEASE_PRESET}} -DBUILD_BENCHMARKS=ON

    - name: Build release HealthGPS
      id: cmake_build_release
      working-directory: ${{github.workspace}}
      run: cmake --build --preset=${{env.RELEASE_BUILD_PRESET}}

    - name: Install release HealthGPS
      id: cmake_install_release
      working-directory: ${{github.workspace}}
      run: cmake --build --preset=${{env.RELEASE_BUILD_PRESET}} --target install --config Release

    - name: Check TBB Linking
      id: tbb_linking_check
      working-directory: ${{github.workspace}}/out/install/${{env.RELEASE_PRESET}}/bin/
      run: ldd HealthGPS.Console

    - name: Zip output folder
      id: zip_folder
      working-directory: ${{github.workspace}}/out/install/${{env.RELEASE_PRESET}}/bin/
      run: |
        mkdir ${{github.workspace}}/artifact
        7z a -tzip ${{github.workspace}}/artifact/health_gps_linux.zip *.Console*

    - name: Upload artefacts
      id: upload_zip
      uses: actions/upload-artifact@v3
      with:
        name: health-gps-archive
        path: artifact/health_gps_linux.zip

    - name: Upload release artefacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
          files: artifact/health_gps_linux.zip