name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  workflow_call:

jobs:
  qa:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pre-commit/action@v3.0.0

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux
            os: ubuntu-22.04
            compiler: gcc-default
          - platform: linux
            os: ubuntu-22.04
            compiler: gcc-latest
          - platform: linux
            os: ubuntu-22.04
            compiler: clang
          - platform: windows
            os: windows-2022
            compiler: msvc

    env:
      VCPKG_ROOT: "vcpkg"
      VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"

      # Update when there is a new version of gcc available
      LATEST_GCC_VERSION: 13

    steps:
      - uses: actions/checkout@v3

      # VCPKG routine
      - uses: ./.github/actions/vcpkg-routine

      - name: Configure HealthGPS (debug)
        run: |
          cmake --preset=${{ matrix.platform }}-debug -DWARNINGS_AS_ERRORS=ON -DGENERATE_COVERAGE=ON

      - uses: ZedThree/clang-tidy-review@v0.13.1
        if: matrix.compiler == 'gcc-default' && github.event_name == 'pull_request'
        id: review
        with:
          build_dir: out/build/linux-debug

      # Uploads an artefact containing clang_fixes.json
      - uses: ZedThree/clang-tidy-review/upload@v0.13.1
        if: matrix.compiler == 'gcc-default' && github.event_name == 'pull_request'
        id: upload-review

      # If there are any comments, fail the check
      - if: steps.review.outputs.total_comments > 0 && matrix.compiler == 'gcc-default' && github.event_name == 'pull_request'
        run: exit 1

      - uses: ammaraskar/gcc-problem-matcher@master
      - name: Build HealthGPS (debug)
        if: "!cancelled()" # Run this step, even if the previous one fails
        run: |
          cmake --build --preset=debug-build-${{ matrix.platform }} --target=install

      - name: Run tests
        run: ctest --preset=core-test-${{ matrix.platform }}

      - name: Generate coverage report
        if: matrix.compiler == 'gcc-default'
        working-directory: ${{github.workspace}}/out/build/${{ matrix.platform }}-debug
        run: geninfo . --include 'src/HealthGPS*' --exclude 'src/HealthGPS.Tests' --output-file main_coverage.info

      - name: Upload coverage reports to Codecov
        if: matrix.compiler == 'gcc-default'
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
